use block::{AES, Mode};

fn main() {
    let key = [0x12, 0xd2, 0xed, 0x32, 0x99, 0x57, 0xad, 0xcb, 0x5e, 0x61, 0xad, 0xcb, 0x5e, 0x61, 0x32, 0x99];
    let aes = AES::new(&key).expect("wrong key");

    let plain = [
        0x12, 0xd2, 0xed, 0x32, 0x99, 0x57, 0xad, 0xcb, 0x5e, 0x61, 0xad, 0xcb, 0x5e, 0x61, 0x32, 0x99,
        0x12, 0xd2, 0xed, 0x32, 0x99, 0x57, 0xad, 0xcb, 0x5e, 0x61, 0xad, 0xcb, 0x5e, 0x61, 0x32, 0x99,
        0x12, 0xd2, 0xed, 0x32, 0x99, 0x57, 0xad, 0xcb, 0x5e, 0x61, 0xad, 0xcb, 0x5e, 0x61, 0x32, 0x99,
        0x12, 0xd2, 0xed, 0x32, 0x99, 0x57, 0xad, 0xcb, 0x5e, 0x61, 0xad, 0xcb, 0x5e, 0x61, 0x32
    ];

    let cipher = [
        0x4f, 0xd1, 0x23, 0x4d, 0x6c, 0x61, 0x8e, 0x27, 0xe7, 0x73, 0xfe, 0x0f, 0x4a, 0x5a, 0x1b, 0xf0,
        0x4f, 0xd1, 0x23, 0x4d, 0x6c, 0x61, 0x8e, 0x27, 0xe7, 0x73, 0xfe, 0x0f, 0x4a, 0x5a, 0x1b, 0xf0,
        0x4f, 0xd1, 0x23, 0x4d, 0x6c, 0x61, 0x8e, 0x27, 0xe7, 0x73, 0xfe, 0x0f, 0x4a, 0x5a, 0x1b, 0xf0,
        0x5f, 0xa2, 0xff, 0x93, 0x26, 0x4d, 0x75, 0xe4, 0x21, 0x9a, 0x16, 0x04, 0x14, 0x0f, 0x60, 0x0c,
    ];

    let mode = Mode::Ecb;

    println!("{:x?}\n", mode.encrypt(aes, &plain));

    println!("{:x?}", Mode::Ecb.decrypt(AES::new(&key).expect("wrong key"), &cipher));

}
